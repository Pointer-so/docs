{
  "openapi": "3.0.3",
  "info": {
    "title": "Pointer API",
    "description": "API Information for internal development.",
    "termsOfService": "http://pointer.so/tos",
    "version": "0.2",
    "contact": {
      "name": "Khosraw Azizi",
      "email": "khosraw@pointer.so"
    },
    "servers": [
      "http://localhost:8080"
    ]
  },
  "tags": [],
  "paths": {
    "openapi": {
      "0": "3",
      "1": ".",
      "2": "0",
      "3": ".",
      "4": "3"
    },
    "/notes/source/{sourceType}": {
      "get": {
        "summary": "Get notes by source type for the authenticated user",
        "tags": [
          "Note"
        ],
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "sourceType",
            "required": true,
            "schema": {
              "type": "string",
              "enum": [
                "AUDIO",
                "VIDEO",
                "DOCUMENT"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved notes",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Note"
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          },
          "500": {
            "$ref": "#/components/responses/InternalServerError"
          }
        }
      }
    },
    "/notes/recent": {
      "get": {
        "summary": "Get recent notes for the authenticated user",
        "tags": [
          "Note"
        ],
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "query",
            "name": "limit",
            "schema": {
              "type": "integer",
              "default": 10
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved recent notes",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Note"
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          },
          "500": {
            "$ref": "#/components/responses/InternalServerError"
          }
        }
      }
    },
    "/notes/note/classrooms/{noteId}": {
      "get": {
        "summary": "Get classrooms where a note has been added",
        "tags": [
          "Note"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "noteId",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved classrooms where note has been added",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Classroom"
                  }
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/NotFoundError"
          },
          "500": {
            "$ref": "#/components/responses/InternalServerError"
          }
        }
      }
    },
    "/notes/note/{noteId}/add/{classroomId}": {
      "post": {
        "summary": "Add a note to a classroom",
        "tags": [
          "Note"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "noteId",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "in": "path",
            "name": "classroomId",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully added note to classroom"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundError"
          },
          "500": {
            "$ref": "#/components/responses/InternalServerError"
          }
        }
      }
    },
    "/notes/note/{noteId}/remove/{classroomId}": {
      "delete": {
        "summary": "Remove a note from a classroom",
        "tags": [
          "Note"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "noteId",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "in": "path",
            "name": "classroomId",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully removed note from classroom",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Note removed from classroom successfully"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/NotFoundError"
          },
          "500": {
            "$ref": "#/components/responses/InternalServerError"
          }
        }
      }
    },
    "/notes/note/{noteId}/publish/{classroomId}": {
      "post": {
        "summary": "Publish a note to a classroom (only for teachers)",
        "tags": [
          "Note"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "noteId",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "in": "path",
            "name": "classroomId",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully published note to classroom"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundError"
          },
          "500": {
            "$ref": "#/components/responses/InternalServerError"
          }
        }
      }
    },
    "/notes/note/{noteId}/unpublish/{classroomId}": {
      "delete": {
        "summary": "Unpublish a note from a classroom (only for teachers)",
        "tags": [
          "Note"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "noteId",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "in": "path",
            "name": "classroomId",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully unpublished note from classroom"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundError"
          },
          "500": {
            "$ref": "#/components/responses/InternalServerError"
          }
        }
      }
    },
      "ChatMessage": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "required": true,
            "description": "The unique identifier of the chat message."
          },
          "sessionId": {
            "type": "string",
            "format": "uuid",
            "$ref": "#/components/schemas/TASession",
            "required": true,
            "description": "The unique identifier of the TA session."
          },
          "userSenderId": {
            "type": "string",
            "format": "uuid",
            "$ref": "#/components/schemas/User",
            "description": "The unique identifier of the user who sent the message."
          },
          "userReceiverId": {
            "type": "string",
            "format": "uuid",
            "$ref": "#/components/schemas/User",
            "description": "The unique identifier of the user who received the message."
          },
          "taSenderId": {
            "type": "string",
            "format": "uuid",
            "$ref": "#/components/schemas/TA",
            "description": "The unique identifier of the TA who sent the message."
          },
          "taReceiverId": {
            "type": "string",
            "format": "uuid",
            "$ref": "#/components/schemas/TA",
            "description": "The unique identifier of the TA who received the message."
          },
          "attachmentId": {
            "type": "string",
            "format": "uuid",
            "$ref": "#/components/schemas/MessageAttachment",
            "description": "The unique identifier of the message/file attachment."
          },
          "messageText": {
            "type": "string",
            "maxLength": 10000,
            "description": "The text content of the chat message.",
            "example": "Hi can I get some help with my math assignment?"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "description": "The date and time when the chat message was created."
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "description": "The date and time when the chat message was last updated."
          }
        }
      },
      "Classroom": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "description": "The unique identifier of the classroom."
          },
          "className": {
            "type": "string",
            "maxLength": 255,
            "required": true,
            "description": "The name of the classroom.",
            "example": "AP Biology 2nd Period"
          },
          "img": {
            "type": "string",
            "maxLength": 1000,
            "description": "The URL or descriptor of the image for the classroom.",
            "example": "https://www.example.com/image.jpg"
          },
          "ownerId": {
            "type": "string",
            "format": "uuid",
            "$ref": "#/components/schemas/User",
            "required": true,
            "description": "The owner of the classroom."
          },
          "description": {
            "type": "string",
            "maxLength": 1000,
            "required": true,
            "description": "The description of the classroom.",
            "example": "This is a classroom for AP Biology students."
          },
          "section": {
            "type": "string",
            "maxLength": 50,
            "description": "The section/period/placement of the classroom either in a time or physical sense.",
            "example": "Period 2"
          },
          "gradeLevel": {
            "type": "string",
            "maxLength": 50,
            "description": "The grade level of the classroom.",
            "example": "5th Grade"
          },
          "classroomCode": {
            "type": "string",
            "maxLength": 16,
            "required": true,
            "unique": true,
            "description": "The unique identifier used to join the classroom.",
            "example": "KHF76D"
          },
          "status": {
            "type": "string",
            "required": true,
            "enum": [
              "CONNECTED",
              "DISCONNECTED",
              "ARCHIVED"
            ],
            "default": "DISCONNECTED",
            "description": "The status of the classroom.",
            "example": "CONNECTED"
          },
          "googleClassroomId": {
            "type": "string",
            "maxLength": 50,
            "description": "The unique identifier of the Google Classroom in Google API.",
            "unique": true
          },
          "lastCodeGen": {
            "type": "string",
            "format": "date-time",
            "default": "now()",
            "required": true,
            "description": "The date and time the last code was generated."
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "required": true,
            "default": "now()",
            "description": "The date and time the classroom was created at."
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "default": "now()",
            "description": "The date and time the classroom was last updated/modified at."
          }
        }
      },
      "ClassroomUsers": {
        "type": "object",
        "properties": {
          "classroomId": {
            "type": "string",
            "format": "uuid",
            "$ref": "#/components/schemas/Classroom",
            "required": true,
            "description": "The classroom to form the relationship with."
          },
          "userId": {
            "type": "string",
            "format": "uuid",
            "$ref": "#/components/schemas/User",
            "required": true,
            "description": "The user to form the relationship with."
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "required": true,
            "default": "now()",
            "description": "The date and time the object was created at."
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "default": "now()",
            "description": "The date and time the object was last updated/modified at."
          }
        }
      },
      "ClassroomTAs": {
        "type": "object",
        "properties": {
          "classroomId": {
            "type": "string",
            "format": "uuid",
            "$ref": "#/components/schemas/Classroom",
            "required": true,
            "description": "The classroom to form the relationship with."
          },
          "taId": {
            "type": "string",
            "format": "uuid",
            "$ref": "#/components/schemas/TA",
            "required": true,
            "description": "The TA to form the relationship with."
          },
          "published": {
            "type": "boolean",
            "required": true,
            "description": "The status of the TA in the classroom."
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "required": true,
            "default": "now()",
            "description": "The date and time the object was created at."
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "default": "now()",
            "description": "The date and time the object was last updated/modified at."
          }
        }
      },
      "ClassroomTopicOverview": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "description": "The unique identifier for this classroom topic overview object."
          },
          "classroomId": {
            "type": "string",
            "format": "uuid",
            "$ref": "#/components/schemas/Classroom",
            "description": "The class this topic overview belongs to."
          },
          "strugglingTopics": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "title": {
                  "type": "string",
                  "required": true,
                  "description": "The title of the question."
                },
                "description": {
                  "type": "string",
                  "required": true,
                  "description": "The description of the question."
                },
                "tag": {
                  "type": "string",
                  "enum": [
                    "Concept",
                    "Topic",
                    "Chapter",
                    "Question"
                  ],
                  "required": true
                }
              }
            }
          },
          "doingWellTopics": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "title": {
                  "type": "string",
                  "required": true,
                  "description": "The title of the question."
                },
                "description": {
                  "type": "string",
                  "required": true,
                  "description": "The description of the question."
                },
                "tag": {
                  "type": "string",
                  "enum": [
                    "Concept",
                    "Topic",
                    "Chapter",
                    "Question"
                  ],
                  "required": true
                }
              }
            }
          },
          "commonQuestions": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "title": {
                  "type": "string",
                  "required": true,
                  "description": "The title of the question."
                },
                "description": {
                  "type": "string",
                  "required": true,
                  "description": "The description of the question."
                },
                "tag": {
                  "type": "string",
                  "enum": [
                    "Concept",
                    "Topic",
                    "Chapter",
                    "Question"
                  ],
                  "required": true
                }
              }
            }
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "required": true,
            "default": "now()",
            "description": "The date and time the object was created at."
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "default": "now()",
            "description": "The date and time the object was last updated/modified at."
          }
        }
      },
      "Flashcard": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "description": "The unique identifier for the Flashcard object."
          },
          "studySetId": {
            "type": "string",
            "format": "uuid",
            "description": "The unique identifier of the study set this flashcard belongs to."
          },
          "term": {
            "type": "string",
            "description": "The term or question side of the flashcard."
          },
          "definition": {
            "type": "string",
            "description": "The definition or answer side of the flashcard."
          },
          "order": {
            "type": "integer",
            "description": "The order of the flashcard within the study set."
          },
          "isStarred": {
            "type": "boolean",
            "description": "Indicates whether the flashcard is starred by the user."
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "description": "The date and time when the flashcard was created."
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "description": "The date and time when the flashcard was last updated."
          }
        }
      },
      "GradedAssignment": {
        "type": "object",
        "description": "Represents a graded assignment submitted by a student",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "description": "Unique identifier for the graded assignment",
            "readOnly": true
          },
          "graderId": {
            "type": "string",
            "format": "uuid",
            "$ref": "#/components/schemas/Grader",
            "description": "ID of the grader associated with this assignment"
          },
          "studentId": {
            "type": "string",
            "format": "uuid",
            "$ref": "#/components/schemas/User",
            "description": "ID of the student who submitted this assignment"
          },
          "grade": {
            "type": "integer",
            "description": "The grade assigned to this submission"
          },
          "chainOfReasoning": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string",
                  "description": "Name of the person in the chain of reasoning"
                },
                "points": {
                  "type": "integer",
                  "description": "Points assigned by the person in the chain of reasoning"
                },
                "comments": {
                  "type": "string",
                  "description": "Comments provided by the person in the chain of reasoning"
                }
              }
            }
          },
          "reasons": {
            "type": "string",
            "maxLength": 1000,
            "description": "Reasons for the assigned grade",
            "nullable": true
          },
          "strengths": {
            "type": "string",
            "maxLength": 1000,
            "description": "Noted strengths of the submission",
            "nullable": true
          },
          "weaknesses": {
            "type": "string",
            "maxLength": 1000,
            "description": "Noted weaknesses or areas for improvement",
            "nullable": true
          },
          "fileIds": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "uuid"
            },
            "description": "Array of file IDs associated with this submission",
            "nullable": true
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "description": "Timestamp of when the graded assignment was created",
            "readOnly": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "description": "Timestamp of when the graded assignment was last updated",
            "readOnly": true
          }
        },
        "required": [
          "graderId",
          "studentId",
          "grade"
        ],
        "example": {
          "id": "123e4567-e89b-12d3-a456-426614174002",
          "graderId": "123e4567-e89b-12d3-a456-426614174000",
          "studentId": "123e4567-e89b-12d3-a456-426614174003",
          "grade": 85,
          "reasons": "Well-structured essay with good arguments, but lacking some depth in analysis",
          "strengths": "Clear writing style, good use of examples",
          "weaknesses": "Could improve on critical analysis and connecting ideas",
          "fileIds": [
            "123e4567-e89b-12d3-a456-426614174004",
            "123e4567-e89b-12d3-a456-426614174005"
          ],
          "createdAt": "2023-06-30T09:00:00Z",
          "updatedAt": "2023-06-30T10:15:00Z"
        }
      },
      "Assessment": {
        "type": "object",
        "properties": {
          "assessment": {
            "type": "string",
            "description": "AI-generated markdown assessment plan. This field contains a structured plan including: 1. Assessment Title and Basic Information 2. Learning Objectives 3. Assessment Format 4. Question Types and Distribution 5. Sample Questions 6. Scoring and Grading 7. Accommodations and Modifications 8. Administration Instructions 9. Post-Assessment Analysis\nThe content uses markdown formatting, including headers, lists, and emphasis.\n"
          }
        }
      },
    }
  }
}
