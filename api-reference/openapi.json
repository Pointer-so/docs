{
  "openapi": "3.0.3",
  "info": {
    "title": "Pointer API",
    "description": "API Information for internal development.",
    "termsOfService": "http://pointer.so/tos",
    "version": "0.2",
    "contact": {
      "name": "Khosraw Azizi",
      "email": "khosraw@pointer.so"
    },
    "servers": [
      "http://localhost:8080"
    ]
  },
  "tags": [],
  "paths": {
    "openapi": {
      "0": "3",
      "1": ".",
      "2": "0",
      "3": ".",
      "4": "3"
    },
    "/studysets/study-sets/{studySetId}/activities/{activityType}/start": {
      "post": {
        "tags": [
          "Study Set"
        ],
        "summary": "Start an activity session",
        "description": "Start a new activity session for a specific study set and activity type",
        "operationId": "startActivitySession",
        "parameters": [
          {
            "name": "studySetId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "activityType",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "enum": [
                "MATCHING",
                "ASTEROID"
              ]
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Activity session started successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "sessionToken": {
                      "type": "string"
                    },
                    "activityMetadata": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string"
                        },
                        "studySetId": {
                          "type": "string",
                          "format": "uuid"
                        },
                        "sessionId": {
                          "type": "string",
                          "format": "uuid"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden - user doesn't have access to this study set"
          },
          "404": {
            "description": "Study set not found"
          },
          "500": {
            "description": "Server error"
          }
        }
      }
    },
    "/studysets/activity-sessions/{sessionId}/data": {
      "get": {
        "tags": [
          "Study Set"
        ],
        "summary": "Get activity data",
        "description": "Retrieve data for an ongoing activity session",
        "operationId": "getActivityData",
        "parameters": [
          {
            "name": "sessionId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved activity data",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "description": "Activity data structure depends on the activity type"
                }
              }
            }
          },
          "400": {
            "description": "Invalid or completed session"
          },
          "401": {
            "description": "Unauthorized - invalid session token"
          },
          "500": {
            "description": "Server error"
          }
        }
      }
    },
    "/studysets/activity-sessions/{sessionId}/flashcards": {
      "get": {
        "tags": [
          "Study Set"
        ],
        "summary": "Get flashcards for activity session",
        "description": "Retrieve flashcards for an ongoing activity session",
        "operationId": "getFlashcardsUsingSession",
        "parameters": [
          {
            "name": "sessionId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved flashcards",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Flashcard"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Study set not found"
          },
          "500": {
            "description": "Server error"
          }
        }
      }
    },
    "/studysets/activity-sessions/{sessionId}/submit-round": {
      "post": {
        "tags": [
          "Study Set"
        ],
        "summary": "Submit activity round",
        "description": "Submit results for a round in an ongoing activity session",
        "operationId": "submitActivityRound",
        "parameters": [
          {
            "name": "sessionId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "roundResult"
                ],
                "properties": {
                  "roundResult": {
                    "type": "object",
                    "properties": {
                      "score": {
                        "type": "integer"
                      },
                      "timeSpent": {
                        "type": "number"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Round submitted successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "nextRound": {
                      "type": "integer"
                    },
                    "timeRemaining": {
                      "type": "number"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid or completed session"
          },
          "401": {
            "description": "Unauthorized - invalid session token"
          },
          "500": {
            "description": "Server error"
          }
        }
      }
    },
    "/studysets/activity-sessions/{sessionId}/finish": {
      "post": {
        "tags": [
          "Study Set"
        ],
        "summary": "Finish activity session",
        "description": "Mark an activity session as completed",
        "operationId": "finishActivitySession",
        "parameters": [
          {
            "name": "sessionId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Activity session completed successfully"
          },
          "400": {
            "description": "Invalid or already completed session"
          },
          "401": {
            "description": "Unauthorized - invalid session token"
          },
          "500": {
            "description": "Server error"
          }
        }
      }
    },
    "/studysets/activity-results/{activityResultId}": {
      "get": {
        "tags": [
          "Study Set"
        ],
        "summary": "Get activity results",
        "description": "Retrieve results for a completed activity session",
        "operationId": "getActivityResults",
        "parameters": [
          {
            "name": "activityResultId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved activity results",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ActivityResult"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Activity result not found"
          },
          "500": {
            "description": "Server error"
          }
        }
      }
    },
    "/studysets/user/session-history": {
      "get": {
        "tags": [
          "Study Set"
        ],
        "summary": "Get user session history",
        "description": "Retrieve session history for the current user",
        "operationId": "getUserSessionHistory",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "schema": {
              "type": "integer",
              "default": 1
            }
          },
          {
            "name": "limit",
            "in": "query",
            "schema": {
              "type": "integer",
              "default": 10
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved user session history",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "oneOf": [
                      {
                        "$ref": "#/components/schemas/QuizSession"
                      },
                      {
                        "$ref": "#/components/schemas/ActivitySession"
                      }
                    ]
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Server error"
          }
        }
      }
    },
    "/studysets/study-sets/{studySetId}/session-history": {
      "get": {
        "tags": [
          "Study Set"
        ],
        "summary": "Get study set session history",
        "description": "Retrieve session history for a specific study set",
        "operationId": "getStudySetSessionHistory",
        "parameters": [
          {
            "name": "studySetId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "page",
            "in": "query",
            "schema": {
              "type": "integer",
              "default": 1
            }
          },
          {
            "name": "limit",
            "in": "query",
            "schema": {
              "type": "integer",
              "default": 10
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved study set session history",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "oneOf": [
                      {
                        "$ref": "#/components/schemas/QuizSession"
                      },
                      {
                        "$ref": "#/components/schemas/ActivitySession"
                      }
                    ]
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden - user doesn't have permission to access this study set session history"
          },
          "404": {
            "description": "Study set not found"
          },
          "500": {
            "description": "Server error"
          }
        }
      }
    },
    "/studysets/sessions/{sessionId}/progress": {
      "get": {
        "tags": [
          "Study Set"
        ],
        "summary": "Get session progress",
        "description": "Retrieve progress for an ongoing session (quiz or activity)",
        "operationId": "getSessionProgress",
        "parameters": [
          {
            "name": "sessionId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved session progress",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "enum": [
                            "quiz"
                          ]
                        },
                        "currentQuestionIndex": {
                          "type": "integer"
                        },
                        "totalQuestions": {
                          "type": "integer"
                        },
                        "timeRemaining": {
                          "type": "number"
                        },
                        "status": {
                          "type": "string"
                        }
                      }
                    },
                    {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "enum": [
                            "activity"
                          ]
                        },
                        "currentRound": {
                          "type": "integer"
                        },
                        "timeRemaining": {
                          "type": "number"
                        },
                        "status": {
                          "type": "string"
                        },
                        "activityType": {
                          "type": "string"
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - invalid session token"
          },
          "404": {
            "description": "Session not found"
          },
          "500": {
            "description": "Server error"
          }
        }
      }
    },
    "/auth/login/status": {
      "get": {
        "tags": [
          "Auth"
        ],
        "summary": "Check if user is logged in",
        "description": "Check if user is logged in",
        "operationId": "checkLoginStatus",
        "responses": {
          "200": {
            "description": "User is logged in, return user ID and status"
          },
          "401": {
            "description": "Unauthorized | User is not logged in"
          },
          "403": {
            "description": "Account is inactive"
          },
          "500": {
            "description": "Unable to check login status"
          }
        }
      }
    },
    "/auth/login/onboarded": {
      "get": {
        "tags": [
          "Auth"
        ],
        "summary": "Check if user is onboarded",
        "description": "Check if user is onboarded",
        "operationId": "checkOnboardedStatus",
        "responses": {
          "200": {
            "description": "User is onboarded"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Account is inactive | User is not onboarded"
          },
          "500": {
            "description": "Unable to check onboarded status"
          }
        }
      }
    },
    "/auth/logout": {
      "post": {
        "tags": [
          "Auth"
        ],
        "summary": "Logout a user",
        "description": "Logout a user",
        "operationId": "logoutUser",
        "responses": {
          "200": {
            "description": "User successfully logged out | User already logged out"
          },
          "500": {
            "description": "Unable to signout"
          }
        }
      }
    },
    "/auth/google": {
      "get": {
        "tags": [
          "Auth"
        ],
        "summary": "Google OAuth2.0",
        "description": "Redirect to Google OAuth2.0",
        "operationId": "googleOAuth",
        "parameters": [
          {
            "name": "redir",
            "in": "query",
            "description": "Redirect URL after successful login",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Redirect to Google OAuth2.0"
          },
          "400": {
            "description": "Bad request | User already logged in"
          },
          "500": {
            "description": "Unable to redirect to Google OAuth2.0"
          }
        }
      }
    },
    "/auth/google/additional-scopes": {
      "get": {
        "tags": [
          "Auth"
        ],
        "summary": "Google OAuth2.0",
        "description": "Redirect to Google OAuth2.0 with additional scopes for integration",
        "operationId": "googleOAuthAdditionalScopes",
        "parameters": [
          {
            "name": "redir",
            "in": "query",
            "description": "Redirect URL after successful login",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Redirect to Google OAuth2.0"
          },
          "400": {
            "description": "Bad request | User already logged in"
          },
          "500": {
            "description": "Unable to redirect to Google OAuth2.0"
          }
        }
      }
    },
    "/chatmessages/{messageId}": {
      "get": {
        "tags": [
          "Chat Message"
        ],
        "summary": "Get chat message by ID",
        "description": "Get chat message by ID",
        "operationId": "getChatMessageById",
        "parameters": [
          {
            "name": "messageId",
            "in": "path",
            "required": true,
            "description": "ID of the chat message to get",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Chat message successfully retrieved"
          },
          "400": {
            "description": "Bad request | Invalid chat message ID"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "User is inactive | User does not own message"
          },
          "404": {
            "description": "Chat message not found"
          },
          "500": {
            "description": "Error retrieving chat message"
          }
        }
      }
    },
    "/classes/me/all": {
      "get": {
        "tags": [
          "Classroom"
        ],
        "summary": "Get all classes for the current user",
        "description": "Get all classes for the current user",
        "operationId": "getAllClassesForCurrentUser",
        "responses": {
          "200": {
            "description": "Classes successfully retrieved",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Classroom"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "User is inactive"
          },
          "404": {
            "description": "Classes not found"
          },
          "500": {
            "description": "Error retrieving classes"
          }
        }
      }
    },
    "/classes/create": {
      "post": {
        "tags": [
          "Classroom"
        ],
        "summary": "Create a new class",
        "description": "Create a new class",
        "operationId": "createClass",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "className",
                  "description"
                ],
                "properties": {
                  "className": {
                    "type": "string"
                  },
                  "description": {
                    "type": "string"
                  },
                  "section": {
                    "type": "string"
                  },
                  "gradeLevel": {
                    "type": "string"
                  },
                  "img": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Class successfully created"
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "User is inactive | User is not a teacher"
          },
          "500": {
            "description": "Error creating classroom"
          }
        }
      }
    },
    "/classes/code/regenerate/{classroomId}": {
      "put": {
        "tags": [
          "Classroom"
        ],
        "summary": "Regenerate class code",
        "description": "Regenerate class code",
        "operationId": "regenerateClassCode",
        "parameters": [
          {
            "name": "classroomId",
            "in": "path",
            "required": true,
            "description": "ID of the class to regenerate code for",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Class code successfully regenerated",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "newCode": {
                      "type": "string",
                      "example": "HUW2D2"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request | Class code can only be generated every 3 hours"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "User is inactive | User is not a teacher | User is not part of the classroom"
          },
          "404": {
            "description": "Class not found"
          },
          "500": {
            "description": "Error regenerating class code"
          }
        }
      }
    },
    "/classes/all/students/{classroomId}": {
      "get": {
        "tags": [
          "Classroom"
        ],
        "summary": "Get all students in a class",
        "description": "Get all students in a class",
        "operationId": "getAllStudentsInClass",
        "parameters": [
          {
            "name": "classroomId",
            "in": "path",
            "required": true,
            "description": "ID of the class to get students from",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Students successfully retrieved",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/User"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "User is inactive | User is not a teacher | User is not a part of the classroom"
          },
          "404": {
            "description": "Class not found | No students found"
          },
          "500": {
            "description": "Error retrieving students"
          }
        }
      }
    },
    "/classes/all/teachers/{classroomId}": {
      "get": {
        "tags": [
          "Classroom"
        ],
        "summary": "Get all teachers in a class",
        "description": "Get all teachers in a class",
        "operationId": "getAllTeachersInClass",
        "parameters": [
          {
            "name": "classroomId",
            "in": "path",
            "required": true,
            "description": "ID of the class to get teachers from",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Teachers successfully retrieved",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/User"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "User is inactive | User is not a teacher | User is not a part of the classroom"
          },
          "404": {
            "description": "Class not found | No teachers found"
          },
          "500": {
            "description": "Error retrieving teachers"
          }
        }
      }
    },
    "/classes/all/tas/{classroomId}": {
      "get": {
        "tags": [
          "Classroom"
        ],
        "summary": "Get all TAs in a class",
        "description": "Get all TAs in a class",
        "operationId": "getAllTAsInClass",
        "parameters": [
          {
            "name": "classroomId",
            "in": "path",
            "required": true,
            "description": "ID of the class to get TAs from",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "TAs successfully retrieved",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/User"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "User is inactive | User is not a part of the classroom"
          },
          "404": {
            "description": "Class not found | No TAs found"
          },
          "500": {
            "description": "Error retrieving TAs"
          }
        }
      }
    },
    "/classes/classroom/class-code/{classCode}": {
      "get": {
        "tags": [
          "Classroom"
        ],
        "summary": "Get class by class code",
        "description": "Get class by class code",
        "operationId": "getClassByClassCode",
        "parameters": [
          {
            "name": "classCode",
            "in": "path",
            "required": true,
            "description": "Class code to get class by",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Class successfully retrieved",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Classroom"
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "User is inactive"
          },
          "404": {
            "description": "Class not found"
          },
          "500": {
            "description": "Error retrieving class"
          }
        }
      }
    },
    "/classes/classroom/{classroomId}": {
      "get": {
        "tags": [
          "Classroom"
        ],
        "summary": "Get class by ID",
        "description": "Get class by ID",
        "operationId": "getClassById",
        "parameters": [
          {
            "name": "classroomId",
            "in": "path",
            "required": true,
            "description": "ID of the class to get",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Class successfully retrieved",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Classroom"
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "User is inactive | User is not part of the classroom"
          },
          "404": {
            "description": "Class not found"
          },
          "500": {
            "description": "Error retrieving class"
          }
        }
      }
    },
    "/classes/classroom/join": {
      "post": {
        "tags": [
          "Classroom"
        ],
        "summary": "Join a class",
        "description": "Join a class",
        "operationId": "joinClass",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "classCode"
                ],
                "properties": {
                  "classCode": {
                    "type": "string",
                    "example": "JDIH23"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Class successfully joined"
          },
          "400": {
            "description": "Bad request | User already in classroom | Invalid classroom code"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "User is inactive | User is not a student"
          },
          "404": {
            "description": "Class not found"
          },
          "500": {
            "description": "Error joining class"
          }
        }
      }
    },
    "/classes/classroom/leave/{classroomId}": {
      "delete": {
        "tags": [
          "Classroom"
        ],
        "summary": "Leave a class",
        "description": "Leave a class",
        "operationId": "leaveClass",
        "parameters": [
          {
            "name": "classroomId",
            "in": "path",
            "required": true,
            "description": "ID of the class to leave",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Class successfully left"
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "User is inactive | User is not a student"
          },
          "404": {
            "description": "Class not found | User not in classroom"
          },
          "500": {
            "description": "Error leaving class"
          }
        }
      }
    },
    "/classes/classroom/{classroomId}/kick/{userId}": {
      "delete": {
        "tags": [
          "Classroom"
        ],
        "summary": "Kick a user from class",
        "description": "Kick a user from class",
        "operationId": "kickUserFromClass",
        "parameters": [
          {
            "name": "classroomId",
            "in": "path",
            "required": true,
            "description": "ID of the class to kick from",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "userId",
            "in": "path",
            "required": true,
            "description": "ID of the user to kick",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully kicked student from class"
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "User is inactive | User is not a teacher | User is not a part of the classroom"
          },
          "404": {
            "description": "Class not found | User is not part of the class"
          },
          "500": {
            "description": "Error adding TA"
          }
        }
      }
    },
    "/classes/classroom/{classroomId}/add-ta/{taId}": {
      "post": {
        "tags": [
          "Classroom"
        ],
        "summary": "Add a TA to a class",
        "description": "Add a TA to a class",
        "operationId": "addTA",
        "parameters": [
          {
            "name": "classroomId",
            "in": "path",
            "required": true,
            "description": "ID of the class to add TA to",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "taId",
            "in": "path",
            "required": true,
            "description": "ID of the TA to add",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "TA successfully added"
          },
          "400": {
            "description": "Bad request | TA already in class"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "User is inactive | User is not a teacher | User is not a part of the classroom"
          },
          "404": {
            "description": "Class not found | TA not found"
          },
          "500": {
            "description": "Error adding TA"
          }
        }
      }
    },
    "/classes/classroom/{classroomId}/remove-ta/{taId}": {
      "delete": {
        "tags": [
          "Classroom"
        ],
        "summary": "Remove a TA from a class",
        "description": "Remove a TA from a class",
        "operationId": "removeTA",
        "parameters": [
          {
            "name": "classroomId",
            "in": "path",
            "required": true,
            "description": "ID of the class to remove TA from",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "taId",
            "in": "path",
            "required": true,
            "description": "ID of the TA to remove",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "TA successfully removed"
          },
          "400": {
            "description": "Bad request | TA not in class"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "User is inactive | User is not a teacher | User is not a part of the classroom"
          },
          "404": {
            "description": "Class not found | TA not found"
          },
          "500": {
            "description": "Error removing TA"
          }
        }
      }
    },
    "/classes/classroom/{classroomId}/publish-ta/{taId}": {
      "post": {
        "tags": [
          "Classroom"
        ],
        "summary": "Publish a TA in a class",
        "description": "Publish a TA in a class",
        "operationId": "publishTA",
        "parameters": [
          {
            "name": "classroomId",
            "in": "path",
            "required": true,
            "description": "ID of the class to publish TA in",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "taId",
            "in": "path",
            "required": true,
            "description": "ID of the TA to publish",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "TA successfully published"
          },
          "400": {
            "description": "Bad request | TA already published"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "User is inactive | User is not a teacher | User is not a part of the classroom"
          },
          "404": {
            "description": "Class not found | TA not found"
          },
          "500": {
            "description": "Error publishing TA"
          }
        }
      }
    },
    "/classes/classroom/{classroomId}/unpublish-ta/{taId}": {
      "delete": {
        "tags": [
          "Classroom"
        ],
        "summary": "Unpublish a TA in a class",
        "description": "Unpublish a TA in a class",
        "operationId": "unpublishTA",
        "parameters": [
          {
            "name": "classroomId",
            "in": "path",
            "required": true,
            "description": "ID of the class to unpublish TA in",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "taId",
            "in": "path",
            "required": true,
            "description": "ID of the TA to unpublish",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "TA successfully unpublished"
          },
          "400": {
            "description": "Bad request | TA not published"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "User is inactive | User is not a teacher | User is not a part of the classroom"
          },
          "404": {
            "description": "Class not found | TA not found"
          },
          "500": {
            "description": "Error unpublishing TA"
          }
        }
      }
    },
    "/classes/classroom/{classroomId}/topic-overview": {
      "get": {
        "tags": [
          "Classroom"
        ],
        "summary": "Get classroom topic overview",
        "description": "Get classroom topic overview",
        "operationId": "getClassroomTopicOverview",
        "parameters": [
          {
            "name": "classroomId",
            "in": "path",
            "required": true,
            "description": "ID of the class to get topic overview for",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Classroom topic overview successfully retrieved",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ClassroomTopicOverview"
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "User is inactive | User is not a teacher | User is not a part of the classroom"
          },
          "404": {
            "description": "Classroom topic overview not found"
          },
          "500": {
            "description": "Error retrieving classroom topic overview"
          }
        }
      }
    }
  }
}